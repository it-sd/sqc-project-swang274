<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Trip Planner Home</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" href="/favicon-16x16.png" type="image/png" />
    <link rel="icon" href="/favicon-32x32.png" type="image/png" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="stylesheet" href="/styles.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous" />
  </head>
  <body onload="initMap()">
    <!-- Include the header/navigation using EJS include -->
    <%- include('header.ejs') %>
    <div class="container mt-2">
      <h1>Trip Planner Home Page</h1>
    </div>

    <div class="container mb-5">
      <div class="col-md-12">
        <!-- New Trip Button -->
        <div class="d-flex justify-content-between align-items-center">
          <h4>Trip List</h4>
          <button type="button" class="btn btn-primary" id="new_trip">New Trip</button>
        </div>
      </div>
      <div class="container row">
        <div class="col-md-12">
          <!-- Trip List Table -->
          <% if (typeof trips === 'undefined' || trips.length === 0) { %>
          <div>Add a Trip to Start with...</div>
          <% } else { %>
          <table class="table table-striped table-hover">
            <!-- table headers -->
            <thead>
              <tr>
                <th>Trip Name</th>
                <th>Note</th>
                <th></th>
              </tr>
            </thead>
            <tbody>
              <% for (const trip of trips) { %>
              <tr class="trip-row" data-trip-id="<%= trip.tripid %>">
                <td><%= trip.trip_name %></td>
                <td><%= trip.note %></td>
                <td>
                  <button class="btn delete_trip" data-trip-id="<%= trip.tripid %>"><i class="fa fa-trash"></i></button>
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>
          <% } %>
        </div>
      </div>
    </div>

    <div class="container">
      <div class="row">
        <!-- google map -->
        <div class="col-7">
          <div id="map" style="height: 550px"></div>
        </div>

        <div class="col-5 mb-5">
          <h5>Add a Trip Stop</h5>
          <form class="needs-validation" novalidate id="trip_stop_form">
            <div class="mb-3">
              <label for="tripId" class="form-label">Trip Name</label>
              <select class="form-select" id="tripId" aria-label="Select Trip Name" required>
                <% if (typeof trips === 'undefined' || trips.length === 0) { %>
                <option value="" disabled selected>Please Add a Trip</option>
                <% } else { for (const trip of trips) { %>
                <option value="<%= trip.tripid %>"><%= trip.trip_name %></option>
                <%} } %>
              </select>
              <div class="invalid-feedback">Please select a trip.</div>
            </div>
            <div class="mb-3">
              <label for="stopName" class="form-label">Stop Name</label>
              <input type="text" class="form-control" id="stopName" placeholder="Enter stop name" required />
              <div class="invalid-feedback">Please enter a stop name.</div>
            </div>

            <div class="mb-3">
              <label for="stopLocation" class="form-label">Location</label>
              <input type="text" class="form-control" id="stopLocation" placeholder="Enter location" required />
              <div class="invalid-feedback">Please enter a location.</div>
            </div>
            <div class="mb-3">
              <label for="stop_note" class="form-label">Note</label>
              <textarea type="text" class="form-control" id="stop_note" placeholder="Enter note" required></textarea>
              <div class="invalid-feedback">Please enter a note.</div>
            </div>

            <button type="button" class="btn btn-primary" id="add_stop_btn">Add Stop</button>
          </form>
        </div>
      </div>
    </div>

    <!-- new trip modal -->
    <div class="modal fade" id="newTripModal" tabindex="-1" aria-labelledby="newTripModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="newTripModalLabel">Create New Trip</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <!-- New Trip Form -->
            <form id="newTripForm">
              <div class="form-group">
                <label for="tripName">Trip Name</label>
                <input type="text" class="form-control" id="tripName" name="tripName" required />
                <div class="invalid-feedback">Please enter a trip name.</div>
              </div>
              <div class="form-group">
                <label for="tripNote">Note</label>
                <textarea class="form-control" id="tripNote" name="tripNote" required></textarea>
                <div class="invalid-feedback">Please enter a trip note.</div>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="save_new_trip">Save</button>
          </div>
        </div>
      </div>
    </div>

    <script>
      $(function () {
        $('#new_trip').on('click', function () {
          $('#newTripModal').modal('show')
        })

        $('#save_new_trip').on('click', function () {
          saveNewTrip()
        })

        $('.trip-row').on('click', function () {
          $('.trip-row').removeClass('table-info')
          $(this).toggleClass('table-info')
        })

        $('.delete_trip').on('click', function () {
          deleteTrip($(this).data('trip-id'))
        })

        $('#add_stop_btn').on('click', function () {
          addTripStop()
        })

        $('.trip-row').on('click', function () {
          showRoute($(this).data('trip-id'))
        })
      })

      function showRoute(tripId) {
        const url = `/api/get_trip_stops?tripId=${tripId}`
        fetch(url)
          .then((response) => response.json())
          .then((data) => {
            console.log(data)

            for (const tripStop of data.tripStops) {
              console.log(tripStop.latitude)
              console.log(tripStop.longitude)

              const marker = new google.maps.Marker({
                position: { lat: parseFloat(tripStop.latitude), lng: parseFloat(tripStop.longitude) },
                map: map,
                title: tripStop.location
              })
              // Set the center of the map to the position of the last marker
              map.panTo(marker.getPosition())
            }

            const directionsService = new google.maps.DirectionsService()
            const directionsRenderer = new google.maps.DirectionsRenderer()
            directionsRenderer.setMap(map)

            const waypoints = [{ location: new google.maps.LatLng(37.7749, -122.4194) }, { location: new google.maps.LatLng(37.7914, -122.4082) }, { location: new google.maps.LatLng(37.7837, -122.4089) }]

            const request = {
              origin: new google.maps.LatLng(37.7749, -122.4194),
              waypoints: waypoints,
              destination: new google.maps.LatLng(37.7749, -122.4194),
              travelMode: google.maps.TravelMode.DRIVING,
              optimizeWaypoints: true
            }

            directionsService.route(request, function (result, status) {
              if (status == google.maps.DirectionsStatus.OK) {
                directionsRenderer.setDirections(result)
              }
            })
          })
          .catch((error) => {
            console.error(error)
          })
      }

      function addTripStop() {
        // Get the form element
        const form = $('#trip_stop_form').get(0)

        // Check if the form is valid
        if (!form.checkValidity()) {
          // If the form is invalid, prevent submission and display the error messages
          event.preventDefault()
          event.stopPropagation()
          form.classList.add('was-validated')
          return
        }

        const tripId = $('#tripId').val()
        const stopName = $('#stopName').val()
        const note = $('#stop_note').val()
        const longitude = $('#stopLocation').data('longitude')
        const latitude = $('#stopLocation').data('latitude')
        const location = $('#stopLocation').val()

        // Create a new trip object
        const stop = {
          tripId: tripId,
          stopName: stopName,
          note: note,
          longitude: longitude,
          latitude: latitude,
          location: location
        }

        // Send a POST request to save the new trip
        fetch('/api/addStop', {
          method: 'POST',
          body: JSON.stringify(stop),
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then((response) => {
            if (response.ok) {
              // Trip saved successfully, do something here
              window.location.reload()
            } else {
              // Trip not saved, handle the error here
            }
          })
          .catch((error) => {
            // Handle the fetch error here
            console.log(error)
          })
      }

      function saveNewTrip() {
        // Get the form element
        const form = $('#newTripForm').get(0)

        // Check if the form is valid
        if (!form.checkValidity()) {
          // If the form is invalid, prevent submission and display the error messages
          event.preventDefault()
          event.stopPropagation()
          form.classList.add('was-validated')
          return
        }

        // Get the trip name and note from the form
        const tripName = $('#tripName').val()
        const tripNote = $('#tripNote').val()
        const userId = $('#hdn_user_id').val()

        // Create a new trip object
        const newTrip = {
          name: tripName,
          note: tripNote,
          customerId: userId
        }

        // Send a POST request to save the new trip
        fetch('/api/trips', {
          method: 'POST',
          body: JSON.stringify(newTrip),
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then((response) => {
            if (response.ok) {
              // Trip saved successfully, do something here
              window.location.reload()
            } else {
              // Trip not saved, handle the error here
            }
          })
          .catch((error) => {
            // Handle the fetch error here
            console.log(error)
          })
      }

      function deleteTrip(tripId) {
        fetch('/api/deleteTrip', {
          method: 'POST',
          body: JSON.stringify({ tripId: tripId }),
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then((response) => {
            if (response.ok) {
              // Trip saved successfully, do something here
              location.reload()
            } else {
              // Trip not saved, handle the error here
            }
          })
          .catch((error) => {
            // Handle the fetch error here
          })
      }

      let map
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: { lat: -34.397, lng: 150.644 },
          zoom: 8
        })

        var geocoder = new google.maps.Geocoder()
        $('#stopLocation').on('change', function () {
          const placeName = $('#stopLocation').val()
          geocoder.geocode({ address: placeName }, function (results, status) {
            if (status === 'OK') {
              var location = results[0].geometry.location
              var marker = new google.maps.Marker({
                map: map,
                position: location
              })
              map.setCenter(location)
              $('#stopLocation').attr('data-latitude', location.lat)
              $('#stopLocation').attr('data-longitude', location.lng)
            } else {
              alert('Geocode was not successful for the following reason: ' + status)
            }
          })
        })
      }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAa2sEK-2f8nUn1yNBifeh7fv0COj7gNjo&callback=initMap"></script>
  </body>
</html>
